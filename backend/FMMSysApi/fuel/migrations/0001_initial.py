# Generated by Django 2.1.5 on 2019-03-17 15:50

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Consumption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('quantity_consumed', models.FloatField(default=0, help_text='The quantity that has been consumed.', verbose_name='Quantity')),
                ('measurement', models.CharField(default='Litre(L))', help_text='Units of measurement', max_length=256, verbose_name='Measurement')),
                ('date_recorded', models.DateField(default=datetime.datetime.today, verbose_name='Date')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailyProductionOnFuel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('power_units', models.FloatField(default=0, help_text='Amount of power that can be generated', max_length=1000, verbose_name='Power Available')),
                ('unit_measurement', models.CharField(default='MW(Mega Watts)', help_text='The unit of measurement in which power is quantified', max_length=256, verbose_name='Unit of measurement')),
                ('date_recorded', models.DateField(default=datetime.datetime.today, verbose_name='Date')),
            ],
            options={
                'verbose_name_plural': 'Production Realisations',
                'verbose_name': 'Production Realisation',
            },
        ),
        migrations.CreateModel(
            name='DeliveryOrder',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('do_number', models.AutoField(help_text='The ordered number or bond de command of the purchase that has been made to be delivered.', primary_key=True, serialize=False, unique=True, verbose_name='Order number')),
                ('po_date', models.DateField(default=datetime.datetime.today, help_text='The date the purchase was ordered.', verbose_name='Purchase Order Date')),
                ('po_description', models.TextField(help_text='Brief description of the order made including the purchase order number.', max_length=256, verbose_name='Order Description')),
                ('delivery_status', models.PositiveIntegerField(choices=[(1, 'Created'), (2, 'Pending'), (3, 'Received')], default=1, help_text="The delivery status.i.e. 'created', 'pending' or 'received'.", verbose_name='Delivery Status')),
                ('eta', models.DateField(default=datetime.datetime.today, help_text='The Estimated Time of Arrival of the order that is being made.', verbose_name='Estimated Arrival Date')),
                ('order_qty', models.FloatField(default=0, help_text='The quantity of fuel ordered.', verbose_name='Quantity Ordered')),
                ('created_by', models.ForeignKey(help_text='The person who created this order.', on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name_plural': 'Delivery Orders',
                'verbose_name': 'Delivery Order',
            },
        ),
        migrations.CreateModel(
            name='Fuel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_name', models.CharField(help_text='The name of the type of fuel.', max_length=1000, verbose_name='Fuel Name')),
                ('fuel_discription', models.TextField(blank=True, help_text='Brief description.', max_length=1000, null=True, verbose_name='Description')),
                ('fuel_category', models.PositiveIntegerField(choices=[(1, 'Heavy Fuel Oil (HFO)'), (2, 'Light Fuel Oil (LFO)'), (3, 'Gas(G)'), (4, 'Other(O)')], help_text='The fuel category or type: HFO or LFO', verbose_name='Category')),
            ],
            options={
                'verbose_name_plural': 'Fuel',
                'verbose_name': 'Fuel',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('record_date', models.DateTimeField(default=datetime.datetime.today, verbose_name='Date')),
                ('quantity', models.FloatField(default=0, help_text='The quantity left of the inventory on previous day.', verbose_name='Initial Quantity')),
                ('measurement', models.CharField(default='Litre(L)', help_text='Units of measurement', max_length=256, verbose_name='Measurement')),
            ],
            options={
                'verbose_name_plural': 'Inventories',
                'verbose_name': 'Inventory',
            },
        ),
        migrations.CreateModel(
            name='SpecificConsumption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specific_consumptions', models.FloatField(default=0, help_text='The rate of fuel consumption per m3 to generated 1MWH of energy', max_length=1000, verbose_name='Specific Consumption')),
                ('date_recorded', models.DateField(default=datetime.datetime.today, verbose_name='Date')),
            ],
            options={
                'verbose_name_plural': 'Specific Consumptions',
                'verbose_name': 'Specific Consumption',
            },
        ),
        migrations.CreateModel(
            name='StockVariation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('record_date', models.DateTimeField(default=datetime.datetime.today, verbose_name='Date')),
                ('initial_qty', models.FloatField(default=0, help_text='The quantity left of the inventory on previous day.', verbose_name='Initial Quantity')),
                ('qty_left', models.FloatField(default=0, help_text='The usable quantity left before consumption.', verbose_name='Quantity on Hand')),
                ('minimum_qty', models.FloatField(default=0, help_text="The threshold quantity that can't be consumed.", verbose_name='Threshold')),
                ('measurement', models.CharField(default='Litre(L)', help_text='Units of measurement', max_length=256, verbose_name='Measurement')),
            ],
            options={
                'verbose_name_plural': 'Inventory Varations',
                'verbose_name': 'Inventory Variation',
            },
        ),
        migrations.CreateModel(
            name='StorageUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_name', models.CharField(help_text='Name of storage facility', max_length=256, verbose_name='Storage Unit')),
                ('storage_capacity', models.FloatField(help_text='The fuel tank storage capacity.', verbose_name='Storage Capacity')),
                ('measurement', models.CharField(default='Litre(L))', help_text='Units of measurement', max_length=256, verbose_name='Measurement')),
                ('facility_location', models.CharField(help_text='The fuel reservoir location or power plant.', max_length=256, verbose_name='Facility location')),
                ('fuel', models.ForeignKey(help_text='The fuel product in the reservoir or storage unit.', on_delete=django.db.models.deletion.CASCADE, related_name='storage_units', to='fuel.Fuel', verbose_name='Fuel')),
            ],
            options={
                'verbose_name_plural': 'Storage Units',
                'verbose_name': 'Storage Unit',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('supplier_name', models.CharField(help_text='The name of the fuel supplier.e.g. TOTAL', max_length=256, verbose_name="Fuel Supplier's Name")),
            ],
            options={
                'verbose_name_plural': 'Suppliers',
                'verbose_name': 'Supplier',
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('quantity_supplied', models.FloatField(default=0, help_text='The Supplied quantity.', verbose_name='Quantity Supplied')),
                ('measurement', models.CharField(default='Litre(L)', help_text='Units of measurement', max_length=256, verbose_name='Measurement')),
                ('date_recorded', models.DateField(default=datetime.datetime.today, verbose_name='Date')),
                ('destined_to', models.ForeignKey(help_text='The fuel storage unit.', on_delete=django.db.models.deletion.CASCADE, related_name='supplies', to='fuel.StorageUnit', verbose_name='Fuel Receptacle')),
                ('supplier', models.ForeignKey(help_text='The company that supplies fuel.', on_delete=django.db.models.deletion.CASCADE, related_name='supplies', to='fuel.Supplier', verbose_name='Fuel Supplier')),
            ],
            options={
                'verbose_name_plural': 'Supplies',
                'verbose_name': 'Supply',
            },
        ),
        migrations.CreateModel(
            name='SupplyScheduleTransaction',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('transaction_no', models.AutoField(default=0, help_text='The id number for the supply transaction', primary_key=True, serialize=False, verbose_name='Transaction number')),
                ('transaction_date', models.DateField(default=datetime.datetime.today, help_text='The date the purchase was ordered.', verbose_name='Purchase Order Date')),
                ('memo', models.TextField(help_text='Brief description of the supply schedule including and constraints attached.', max_length=1000, verbose_name='Memo')),
                ('eta', models.DateField(help_text='The Estimated Time of Arrival of the order that is being made.', verbose_name='Estimated Arrival Date')),
                ('delivery_order', models.ForeignKey(help_text='The delivery order linked to this receipt confirmation.', on_delete=django.db.models.deletion.CASCADE, to='fuel.DeliveryOrder', verbose_name='Delivery Order No.')),
            ],
            options={
                'verbose_name_plural': 'Delivery Schedules',
                'verbose_name': 'Delivery Schedule',
            },
        ),
        migrations.AddField(
            model_name='stockvariation',
            name='qty_added',
            field=models.ForeignKey(default=0, help_text='The quantity added from supply.', on_delete=django.db.models.deletion.CASCADE, to='fuel.Supply', verbose_name='Quantity Supplied'),
        ),
        migrations.AddField(
            model_name='stockvariation',
            name='qty_removed',
            field=models.ForeignKey(default=0, help_text='The quantity to be consumed.', on_delete=django.db.models.deletion.CASCADE, to='fuel.Consumption', verbose_name='Quantity Consumed'),
        ),
        migrations.AddField(
            model_name='stockvariation',
            name='storage_unit',
            field=models.ForeignKey(help_text='The record changes in inventory.', on_delete=django.db.models.deletion.CASCADE, to='fuel.StorageUnit', verbose_name='Storage Facility'),
        ),
        migrations.AddField(
            model_name='specificconsumption',
            name='storage_area',
            field=models.ForeignKey(help_text='The consumption rate with fuel from this storage unit', on_delete=django.db.models.deletion.CASCADE, to='fuel.StorageUnit', verbose_name='Storage Unit'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='storage_unit',
            field=models.ForeignKey(help_text='The record the inventory or physical stock.', on_delete=django.db.models.deletion.CASCADE, to='fuel.StorageUnit', verbose_name='Storage Facility'),
        ),
        migrations.AddField(
            model_name='deliveryorder',
            name='delievery_item',
            field=models.ForeignKey(help_text='The item to be delievered.', on_delete=django.db.models.deletion.CASCADE, to='fuel.Fuel', verbose_name='Item'),
        ),
        migrations.AddField(
            model_name='deliveryorder',
            name='modified_by',
            field=models.ForeignKey(help_text='The person who modified this order.', on_delete=django.db.models.deletion.CASCADE, related_name='modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified by'),
        ),
        migrations.AddField(
            model_name='dailyproductiononfuel',
            name='storage_area',
            field=models.ForeignKey(help_text='The Production realise with fuel from this storage unit', on_delete=django.db.models.deletion.CASCADE, to='fuel.StorageUnit', verbose_name='Storage Unit'),
        ),
        migrations.AddField(
            model_name='consumption',
            name='storage_area',
            field=models.ForeignKey(help_text='The Consumption realise with fuel from this storage unit', on_delete=django.db.models.deletion.CASCADE, related_name='production_realisations', to='fuel.StorageUnit', verbose_name='Storage Unit'),
        ),
    ]
